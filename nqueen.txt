from typing import List

boardcount=0

def isboardok(chessboard:List,row:int,col:int):
    
    #check if ther is a queen Q positioned to the left of the column col on the same row
    for c in range(col):
        if(chessboard[row][c]=='Q'):
            return False
            
    #check if there is queen 'Q' positioned on the upper left diagonal
    for r,c in zip(range(row-1,-1,-1),range(col-1,-1,-1)):
        if(chessboard[r][c]=='Q'):
            return False
            
    #check if there is queen 'Q' positioned on the lower left diagonal
    for r,c in zip(range(row+1,len(chessboard),1),range(col-1,-1,-1)):
        if(chessboard[r][c]=='Q'):
            return False
            
    return True
    
    
def displayboard(chessboard:List):
    for row in chessboard:
        print(row)
        
    print()
        
        
        
def placenqueens(chessboard:List,col:int):
    # if  all the columns have a 'Q' a solution has been found
    
    global boardcount
    displayboard(chessboard)
    if(col>=len(chessboard)):
        boardcount+=1
        print("Board"+str(boardcount))
        print("======================")
        displayboard(chessboard)
        print("======================\n\n")
        
        
    else:
        #else try placing the queen on each row of the same column and check if the chessboard remains ok 
        for row in range(len(chessboard)):
            chessboard[row][col]='Q'
            
            if(isboardok(chessboard,row,col)==True):
                placenqueens(chessboard,col+1)
                
            chessboard[row][col]='.' #backtrack if solution is not found
            
            
            
chessboard=[]
N=int(input("Enter chessboard size: "))
for i in range(N):
    row=["."]*N
    chessboard.append(row)
        

#displayboard(chessboard)

placenqueens(chessboard,0)